// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    partial class AplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Persistence.Models.ApprovedAuthorization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("ApprovalDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("approval_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<int>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("request_id");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("RequestId");

                    b.ToTable("ApprovedAuthorizations");
                });

            modelBuilder.Entity("Persistence.Models.AuthorizationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("amount");

                    b.Property<string>("AuthorizationType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("authorization_type");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<DateTime?>("RequestDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("request_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("AuthorizationRequests");
                });

            modelBuilder.Entity("Persistence.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClientType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("client_type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Persistence.Models.ApprovedAuthorization", b =>
                {
                    b.HasOne("Persistence.Models.Client", "Client")
                        .WithMany("ApprovedAuthorizations")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__ApprovedA__clien__208CD6FA");

                    b.HasOne("Persistence.Models.AuthorizationRequest", "Request")
                        .WithMany("ApprovedAuthorizations")
                        .HasForeignKey("RequestId")
                        .IsRequired()
                        .HasConstraintName("FK__ApprovedA__reque__1F98B2C1");

                    b.Navigation("Client");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Persistence.Models.AuthorizationRequest", b =>
                {
                    b.HasOne("Persistence.Models.Client", "Client")
                        .WithMany("AuthorizationRequests")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Authoriza__clien__1BC821DD");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Persistence.Models.AuthorizationRequest", b =>
                {
                    b.Navigation("ApprovedAuthorizations");
                });

            modelBuilder.Entity("Persistence.Models.Client", b =>
                {
                    b.Navigation("ApprovedAuthorizations");

                    b.Navigation("AuthorizationRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
